{"ast":null,"code":"import axios from \"axios\";\nimport { GET_ERRORS, GET_BUILDINGS_EMPTY, GET_BUILDINGS_TYPE } from \"./types\";\nexport const createBuilding = history => async dispatch => {\n  try {\n    await axios.post(\"http://localhost:8080/building/init\");\n    history.push(\"/dashboard\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\nexport const updateBuilding = () => async dispatch => {\n  const res = await axios.get(\"http://localhost:8080/building/update\");\n};\nexport const getEmptyBuilding = () => async dispatch => {\n  const res = await axios.get(\"http://localhost:8080/building/empty\");\n  dispatch({\n    type: GET_BUILDINGS_EMPTY,\n    payload: res.data\n  });\n};\nexport const getByType = (id, history) => async dispatch => {\n  try {\n    const res = await axios.get(`http://localhost:8080/building/type/${id}`);\n    dispatch({\n      type: GET_BUILDINGS_TYPE,\n      payload: res.data\n    });\n  } catch (error) {\n    history.push(\"/dashboard\");\n  }\n};","map":{"version":3,"sources":["/Users/zhengliang/Desktop/newProject/Project/frontEnd/src/actions/buildingActions.js"],"names":["axios","GET_ERRORS","GET_BUILDINGS_EMPTY","GET_BUILDINGS_TYPE","createBuilding","history","dispatch","post","push","type","payload","err","response","data","updateBuilding","res","get","getEmptyBuilding","getByType","id","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,mBAArB,EAA0CC,kBAA1C,QAAoE,SAApE;AAEA,OAAO,MAAMC,cAAc,GAAIC,OAAD,IAAa,MAAMC,QAAN,IAAkB;AAC3D,MAAI;AACF,UAAMN,KAAK,CAACO,IAAN,CAAW,qCAAX,CAAN;AACAF,IAAAA,OAAO,CAACG,IAAR,CAAa,YAAb;AACAF,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAER,UADC;AAEPS,MAAAA,OAAO,EAAE;AAFF,KAAD,CAAR;AAID,GAPD,CAOE,OAAOC,GAAP,EAAY;AACZL,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAER,UADC;AAEPS,MAAAA,OAAO,EAAEC,GAAG,CAACC,QAAJ,CAAaC;AAFf,KAAD,CAAR;AAID;AACF,CAdM;AAgBP,OAAO,MAAMC,cAAc,GAAG,MAAM,MAAMR,QAAN,IAAkB;AACpD,QAAMS,GAAG,GAAG,MAAMf,KAAK,CAACgB,GAAN,CAAU,uCAAV,CAAlB;AACD,CAFM;AAIP,OAAO,MAAMC,gBAAgB,GAAG,MAAM,MAAMX,QAAN,IAAkB;AACtD,QAAMS,GAAG,GAAG,MAAMf,KAAK,CAACgB,GAAN,CAAU,sCAAV,CAAlB;AACAV,EAAAA,QAAQ,CAAC;AACPG,IAAAA,IAAI,EAAEP,mBADC;AAEPQ,IAAAA,OAAO,EAAEK,GAAG,CAACF;AAFN,GAAD,CAAR;AAID,CANM;AAQP,OAAO,MAAMK,SAAS,GAAG,CAACC,EAAD,EAAKd,OAAL,KAAiB,MAAMC,QAAN,IAAkB;AAC1D,MAAI;AACF,UAAMS,GAAG,GAAG,MAAMf,KAAK,CAACgB,GAAN,CACf,uCAAsCG,EAAG,EAD1B,CAAlB;AAGAb,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAEN,kBADC;AAEPO,MAAAA,OAAO,EAAEK,GAAG,CAACF;AAFN,KAAD,CAAR;AAID,GARD,CAQE,OAAOO,KAAP,EAAc;AACdf,IAAAA,OAAO,CAACG,IAAR,CAAa,YAAb;AACD;AACF,CAZM","sourcesContent":["import axios from \"axios\";\nimport { GET_ERRORS, GET_BUILDINGS_EMPTY, GET_BUILDINGS_TYPE } from \"./types\";\n\nexport const createBuilding = (history) => async dispatch => {\n  try {\n    await axios.post(\"http://localhost:8080/building/init\");\n    history.push(\"/dashboard\");\n    dispatch({\n      type: GET_ERRORS,\n      payload: {}\n    });\n  } catch (err) {\n    dispatch({\n      type: GET_ERRORS,\n      payload: err.response.data\n    });\n  }\n};\n\nexport const updateBuilding = () => async dispatch => {\n  const res = await axios.get(\"http://localhost:8080/building/update\");\n}\n\nexport const getEmptyBuilding = () => async dispatch => {\n  const res = await axios.get(\"http://localhost:8080/building/empty\");\n  dispatch({\n    type: GET_BUILDINGS_EMPTY,\n    payload: res.data\n  });\n};\n\nexport const getByType = (id, history) => async dispatch => {\n  try {\n    const res = await axios.get(\n      `http://localhost:8080/building/type/${id}`\n    );\n    dispatch({\n      type: GET_BUILDINGS_TYPE,\n      payload: res.data\n    });\n  } catch (error) {\n    history.push(\"/dashboard\");\n  }\n};\n"]},"metadata":{},"sourceType":"module"}