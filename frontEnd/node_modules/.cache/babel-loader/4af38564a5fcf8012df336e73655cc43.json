{"ast":null,"code":"var _jsxFileName = \"/Users/zhengliang/Desktop/newProject/Project/frontEnd/src/components/Project/Item.js\";\nimport React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Card from \"react-bootstrap/Card\";\n\nclass Item extends Component {\n  componentDidMount() {\n    this.interval = setInterval(() => this.setState({\n      time: Date.now()\n    }), 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    const {\n      building\n    } = this.props;\n    let type = \"\";\n\n    if (building.buildingType == 0) {\n      type = \"Study\";\n    } else if (building.buildingType == 1) {\n      type = \"Living\";\n    } else if (building.buildingType == 2) {\n      type = \"Exercise\";\n    } else if (building.buildingType == 3) {\n      type = \"Parking\";\n    }\n\n    let color = null;\n    let load = building.load * 100;\n\n    if (load === 0) {\n      color = React.createElement(\"img\", {\n        src: \"./grey.png\",\n        style: {\n          height: 25,\n          width: 25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      });\n    } else if (load > 0 && load <= 30) {\n      color = React.createElement(\"img\", {\n        src: \"./green.png\",\n        style: {\n          height: 25,\n          width: 25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      });\n    } else if (load > 30 && load <= 60) {\n      color = React.createElement(\"img\", {\n        src: \"./orange.jpg\",\n        style: {\n          height: 25,\n          width: 25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      });\n    } else if (load > 60) {\n      color = React.createElement(\"img\", {\n        src: \"./red.png\",\n        style: {\n          height: 25,\n          width: 25\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(Card, {\n      style: {\n        width: \"18rem\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(Card.Body, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(Card.Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, building.name), React.createElement(Card.Subtitle, {\n      className: \"mb-2 text-muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, type), React.createElement(Card.Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Capacity: \", building.capacity, \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), \"Current: \", parseInt(building.capacity * building.load), \" \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), \"Load: \", Number((building.load * 100).toFixed(1)), \" % \", React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), color), React.createElement(Card.Link, {\n      href: \"#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, building.update_at)));\n  }\n\n}\n\nexport default Item;","map":{"version":3,"sources":["/Users/zhengliang/Desktop/newProject/Project/frontEnd/src/components/Project/Item.js"],"names":["React","Component","Card","Item","componentDidMount","interval","setInterval","setState","time","Date","now","componentWillUnmount","clearInterval","render","building","props","type","buildingType","color","load","height","width","name","capacity","parseInt","Number","toFixed","update_at"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Card from \"react-bootstrap/Card\";\n\nclass Item extends Component {\n  \n  componentDidMount() {\n    this.interval = setInterval(\n      () => this.setState({ time: Date.now() }),\n      1000\n    );\n  }\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    const { building } = this.props;\n\n    let type = \"\";\n    if (building.buildingType == 0) {\n      type = \"Study\";\n    } else if (building.buildingType == 1) {\n      type = \"Living\";\n    } else if (building.buildingType == 2) {\n      type = \"Exercise\";\n    } else if (building.buildingType == 3) {\n      type = \"Parking\";\n    }\n\n    let color = null;\n    let load = building.load * 100;\n\n    if (load === 0) {\n      color = <img src=\"./grey.png\" style={{ height: 25, width: 25 }} />;\n    } else if (load > 0 && load <= 30) {\n      color = <img src=\"./green.png\" style={{ height: 25, width: 25 }} />;\n    } else if (load > 30 && load <= 60) {\n      color = <img src=\"./orange.jpg\" style={{ height: 25, width: 25 }} />;\n    } else if (load > 60) {\n      color = <img src=\"./red.png\" style={{ height: 25, width: 25 }} />;\n    }\n\n    return (\n      <Card style={{ width: \"18rem\" }}>\n        <Card.Body>\n          <Card.Title>{building.name}</Card.Title>\n          <Card.Subtitle className=\"mb-2 text-muted\">{type}</Card.Subtitle>\n          <Card.Text>\n            Capacity: {building.capacity} <br></br>\n            Current: {parseInt(building.capacity * building.load)} <br></br>\n            Load: {Number((building.load * 100).toFixed(1))} % <br></br>\n            {color}\n          </Card.Text>\n          <Card.Link href=\"#\">{building.update_at}</Card.Link>\n        </Card.Body>\n      </Card>\n    );\n  }\n}\n\nexport default Item;\n"]},"metadata":{},"sourceType":"module"}